services:
  db:
    image: postgres:latest
    container_name: postgres_container
    environment:
      POSTGRES_USER: world_change_db
      POSTGRES_PASSWORD: frank123
      POSTGRES_DB: yahoo_improved
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U world_change_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin_container
    environment:
      PGADMIN_DEFAULT_EMAIL: mack.c.ianni@gmail.com
      PGADMIN_DEFAULT_PASSWORD: RosieGeorgia117599
    ports:
      - "8080:80"
    depends_on:
      - db

  backend:
    build: ./backend
    container_name: backend_container
    environment:
      - PORT=5000
      - POSTGRES_USER=world_change_db
      - POSTGRES_PASSWORD=frank123
      - POSTGRES_DB=yahoo_improved
      - DB_HOST=db
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "5001:5000"  # Changed host port to 5001 to avoid conflicts
    volumes:
      - ./backend:/usr/src/app
      - /usr/src/app/node_modules
    working_dir: /usr/src/app
    command: npm start

  frontend:
    build: ./frontend
    container_name: frontend_container
    environment:
      - REACT_APP_API_URL=http://backend:5000  # Points to the backend service within Docker network
    depends_on:
      backend:
        condition: service_healthy
    ports:
      - "3000:80"  # Maps host port 3000 to container's Nginx port 80
    volumes:
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules
    working_dir: /usr/src/app
    # No need to specify command as Dockerfile defines CMD

volumes:
  db_data:
